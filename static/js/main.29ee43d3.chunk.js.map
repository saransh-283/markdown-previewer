{"version":3,"sources":["components/Main/react-main.js","components/Toggle/toggle.js","index.js","assets/js/main.js"],"names":["Markdown","props","constants","editor","document","getElementById","resizer","preview","viewport","getElementsByTagName","table","viewportWidth","initialEditorWidth","state","editorWidth","previewWidth","text","initial","markdown","marked","handleChange","bind","resizerMouseDown","documentMouseMove","documentMouseUp","event","this","setState","target","value","getBoundingClientRect","width","body","addEventListener","e","mousePosition","clientX","removeEventListener","id","style","onChange","onMouseDown","dangerouslySetInnerHTML","__html","React","Component","Toggle","toggled","handleClick","className","onClick","ReactDOM","render"],"mappings":"0WAwEeA,E,kDAhEX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,UAAY,CACbC,OAAQC,SAASC,eAAe,eAChCC,QAASF,SAASC,eAAe,WACjCE,QAASH,SAASC,eAAe,gBACjCG,SAAUJ,SAASK,qBAAqB,QAAQ,GAChDC,MAAON,SAASK,qBAAqB,SACrCE,cAAe,EACfC,mBAAoB,GAGxB,EAAKC,MAAQ,CACTC,YAAa,SACbC,aAAc,OACdC,KAAM,EAAKf,MAAMgB,QACjBC,SAAUC,IAAO,EAAKlB,MAAMgB,UAGhC,EAAKG,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,kBAAoB,EAAKA,kBAAkBF,KAAvB,gBACzB,EAAKG,gBAAkB,EAAKA,gBAAgBH,KAArB,gBAtBR,E,gDA2BnB,SAAaI,GACTC,KAAKC,SAAS,CAAEX,KAAMS,EAAMG,OAAOC,MAAOX,SAAUC,IAAOM,EAAMG,OAAOC,W,8BAG5E,WACIH,KAAKxB,UAAUS,cAAgBe,KAAKxB,UAAUM,SAASsB,wBAAwBC,MAE/E3B,SAAS4B,KAAKC,iBAAiB,YAAaP,KAAKH,mBACjDnB,SAAS4B,KAAKC,iBAAiB,UAAWP,KAAKF,mB,+BAGnD,SAAkBU,GACd,IAAIC,EAAgBD,EAAEE,QAEtBV,KAAKC,SAAS,CAAEb,YAAY,GAAD,OAAsB,IAAhBqB,EAAsBT,KAAKxB,UAAUS,cAA3C,QAC3Be,KAAKC,SAAS,CAAEZ,aAAa,GAAD,OAAK,IAAuB,IAAhBoB,EAAsBT,KAAKxB,UAAUS,cAAjD,U,6BAGhC,WACIP,SAAS4B,KAAKK,oBAAoB,YAAaX,KAAKH,qB,oBAGxD,WACI,OAAO,8BACH,sBAAKe,GAAG,OAAR,UACI,qBAAKA,GAAG,cAAcC,MAAO,CAAER,MAAOL,KAAKb,MAAMC,aAAjD,SACI,0BAAU0B,SAAUd,KAAKN,aAAcS,MAAOH,KAAKb,MAAMG,KAAMsB,GAAG,aAEtE,qBAAKA,GAAG,UAAUG,YAAaf,KAAKJ,mBACpC,qBAAKgB,GAAG,eAAeC,MAAO,CAAER,MAAOL,KAAKb,MAAME,cAAlD,SACI,qBAAKuB,GAAG,UAAUI,wBAAyB,CAAEC,OAAQjB,KAAKb,MAAMK,uB,GA1D7D0B,IAAMC,WCadC,G,wDAhBX,WAAY7C,GAAQ,IAAD,8BACf,cAAMA,IACDY,MAAQ,CAAEkC,SAAS,GACxB,EAAKC,YAAc,EAAKA,YAAY3B,KAAjB,gBAHJ,E,+CAKnB,WACIK,KAAKC,SAAS,CAAEoB,SAAUrB,KAAKb,MAAMkC,UACrC3C,SAAS4B,KAAKiB,UAAd,WAA4BvB,KAAKb,MAAMkC,W,oBAE3C,WACI,OAAO,qBAAKG,QAASxB,KAAKsB,YAAaC,UAAS,iBAAYvB,KAAKb,MAAMkC,SAAhE,SACH,qBAAKE,UAAU,gB,GAZNL,IAAMC,Y,kBCM3BM,IAASC,OAAQ,cACb,EADa,CACJnC,QCVL,umCDcJb,SAASC,eAAe,WAI5B8C,IAASC,OAAQ,cAAE,EAAF,IAAehD,SAASC,eAAe,a","file":"static/js/main.29ee43d3.chunk.js","sourcesContent":["import React from 'react';\nimport marked from 'marked'\n//import Pane from '../Pane/Pane'\nimport './react-style.css'\nimport './react-mobile.css'\n\n\nclass Markdown extends React.Component {\n    constructor(props) {\n        super(props)\n        this.constants = {\n            editor: document.getElementById('editor-pane'),\n            resizer: document.getElementById('resizer'),\n            preview: document.getElementById('preview-pane'),\n            viewport: document.getElementsByTagName('body')[0],\n            table: document.getElementsByTagName('table'),\n            viewportWidth: 0,\n            initialEditorWidth: 0\n        }\n\n        this.state = {\n            editorWidth: '29.5vw',\n            previewWidth: '70vw',\n            text: this.props.initial,\n            markdown: marked(this.props.initial)\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.resizerMouseDown = this.resizerMouseDown.bind(this)\n        this.documentMouseMove = this.documentMouseMove.bind(this)\n        this.documentMouseUp = this.documentMouseUp.bind(this)\n\n\n    }\n\n    handleChange(event) {\n        this.setState({ text: event.target.value, markdown: marked(event.target.value) })\n    }\n\n    resizerMouseDown() {\n        this.constants.viewportWidth = this.constants.viewport.getBoundingClientRect().width\n\n        document.body.addEventListener('mousemove', this.documentMouseMove)\n        document.body.addEventListener('mouseup', this.documentMouseUp)\n    }\n\n    documentMouseMove(e) {\n        var mousePosition = e.clientX\n\n        this.setState({ editorWidth: `${(mousePosition * 100 / this.constants.viewportWidth)}vw` })\n        this.setState({ previewWidth: `${100 - (mousePosition * 100 / this.constants.viewportWidth)}vw` })\n    }\n\n    documentMouseUp() {\n        document.body.removeEventListener('mousemove', this.documentMouseMove)\n    }\n\n    render() {\n        return <div>\n            <div id=\"main\">\n                <div id=\"editor-pane\" style={{ width: this.state.editorWidth }}>\n                    <textarea onChange={this.handleChange} value={this.state.text} id=\"editor\"></textarea>\n                </div>\n                <div id=\"resizer\" onMouseDown={this.resizerMouseDown}></div>\n                <div id=\"preview-pane\" style={{ width: this.state.previewWidth }}>\n                    <div id=\"preview\" dangerouslySetInnerHTML={{ __html: this.state.markdown }}></div>\n                </div>\n            </div>\n        </div>\n    }\n}\n\nexport default Markdown","import React from 'react';\nimport '../Toggle/toggle.css'\n\nclass Toggle extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = { toggled: false }\n        this.handleClick = this.handleClick.bind(this)\n    }\n    handleClick() {\n        this.setState({ toggled: !this.state.toggled })\n        document.body.className=`${!this.state.toggled}`\n    }\n    render() {\n        return <div onClick={this.handleClick} className={`toggle ${this.state.toggled}`}>\n            <div className=\"notch\"></div>\n        </div>\n    }\n}\n\nexport default Toggle","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Markdown from '../src/components/Main/react-main'\nimport Toggle from '../src/components/Toggle/toggle'\nimport '../src/assets/css/style.css'\nimport '../src/assets/css/mobile.css'\nimport '../src/assets/css/dark.css'\nimport TEXT from '../src/assets/js/main'\n\nReactDOM.render( <\n    Markdown initial = {\n        TEXT\n    }\n    />,\n    document.getElementById('render')\n);\n\n\nReactDOM.render( < Toggle / > , document.getElementById('toggle'))","var TEXT = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`\n\n\nexport default TEXT"],"sourceRoot":""}