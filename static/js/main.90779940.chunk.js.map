{"version":3,"sources":["components/react-components/react-main.js","index.js","assets/js/main.js"],"names":["Markdown","props","constants","editor","document","getElementById","resizer","preview","viewport","getElementsByTagName","viewportWidth","initialEditorWidth","state","editorWidth","previewWidth","text","initial","markdown","marked","handleChange","bind","resizerMouseDown","documentMouseMove","documentMouseUp","event","this","setState","target","value","getBoundingClientRect","width","body","addEventListener","e","mousePosition","clientX","removeEventListener","id","style","onChange","onMouseDown","dangerouslySetInnerHTML","__html","React","Component","ReactDOM","render"],"mappings":"2SAkEeA,E,kDA5DX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,UAAU,CACXC,OAAQC,SAASC,eAAe,eAChCC,QAASF,SAASC,eAAe,WACjCE,QAASH,SAASC,eAAe,gBACjCG,SAAUJ,SAASK,qBAAqB,QAAQ,GAChDC,cAAe,EACfC,mBAAoB,GAGxB,EAAKC,MAAM,CACPC,YAAa,SACbC,aAAc,OACdC,KAAK,EAAKd,MAAMe,QAChBC,SAAUC,IAAO,EAAKjB,MAAMe,UAGhC,EAAKG,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,kBAAoB,EAAKA,kBAAkBF,KAAvB,gBACzB,EAAKG,gBAAkB,EAAKA,gBAAgBH,KAArB,gBArBR,E,gDAwBnB,SAAaI,GAETC,KAAKC,SAAS,CAACX,KAAKS,EAAMG,OAAOC,MAAMX,SAASC,IAAOM,EAAMG,OAAOC,W,8BAGxE,WACIH,KAAKvB,UAAUQ,cAAgBe,KAAKvB,UAAUM,SAASqB,wBAAwBC,MAE/E1B,SAAS2B,KAAKC,iBAAiB,YAAaP,KAAKH,mBACjDlB,SAAS2B,KAAKC,iBAAiB,UAAWP,KAAKF,mB,+BAGnD,SAAkBU,GACd,IAAIC,EAAgBD,EAAEE,QAEtBV,KAAKC,SAAS,CAACb,YAAY,GAAD,OAAsB,IAAhBqB,EAAsBT,KAAKvB,UAAUQ,cAA3C,QAC1Be,KAAKC,SAAS,CAACZ,aAAa,GAAD,OAAK,IAAuB,IAAhBoB,EAAsBT,KAAKvB,UAAUQ,cAAjD,U,6BAG/B,WACIN,SAAS2B,KAAKK,oBAAoB,YAAaX,KAAKH,qB,oBAGxD,WACI,OAAO,sBAAKe,GAAG,OAAR,UACH,qBAAKA,GAAG,cAAcC,MAAO,CAACR,MAAML,KAAKb,MAAMC,aAA/C,SACI,0BAAU0B,SAAUd,KAAKN,aAAcS,MAAOH,KAAKb,MAAMG,KAAMsB,GAAG,aAEtE,qBAAKA,GAAG,UAAUG,YAAaf,KAAKJ,mBACpC,qBAAKgB,GAAG,eAAeC,MAAO,CAACR,MAAML,KAAKb,MAAME,cAAhD,SACI,qBAAKuB,GAAG,UAAUI,wBAAyB,CAACC,OAAOjB,KAAKb,MAAMK,qB,GAvDvD0B,IAAMC,W,YCE7BC,IAASC,OACP,cAAC,EAAD,CAAU9B,QCRJ,umCDSNZ,SAASC,eAAe,a","file":"static/js/main.90779940.chunk.js","sourcesContent":["import React from 'react';\nimport marked from 'marked'\nimport '../react-components/react-style.css'\n\n\nclass Markdown extends React.Component {\n    constructor(props) {\n        super(props)\n        this.constants={\n            editor: document.getElementById('editor-pane'),\n            resizer: document.getElementById('resizer'),\n            preview: document.getElementById('preview-pane'),\n            viewport: document.getElementsByTagName('body')[0],\n            viewportWidth: 0,\n            initialEditorWidth: 0\n        }\n\n        this.state={\n            editorWidth: '29.5vw',\n            previewWidth: '70vw',\n            text:this.props.initial,\n            markdown: marked(this.props.initial)\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.resizerMouseDown = this.resizerMouseDown.bind(this)\n        this.documentMouseMove = this.documentMouseMove.bind(this)\n        this.documentMouseUp = this.documentMouseUp.bind(this)\n    }\n\n    handleChange(event) {\n        //document.getElementById('preview').innerHTML = marked(event.target.value)\n        this.setState({text:event.target.value,markdown:marked(event.target.value)})\n    }\n\n    resizerMouseDown() {\n        this.constants.viewportWidth = this.constants.viewport.getBoundingClientRect().width\n        \n        document.body.addEventListener('mousemove', this.documentMouseMove)\n        document.body.addEventListener('mouseup', this.documentMouseUp)\n    }\n\n    documentMouseMove(e) {\n        var mousePosition = e.clientX\n\n        this.setState({editorWidth: `${(mousePosition * 100 / this.constants.viewportWidth)}vw`})\n        this.setState({previewWidth: `${100 - (mousePosition * 100 / this.constants.viewportWidth)}vw`})\n    }\n\n    documentMouseUp() {\n        document.body.removeEventListener('mousemove', this.documentMouseMove)\n    }\n\n    render() {\n        return <div id=\"main\">\n            <div id=\"editor-pane\" style={{width:this.state.editorWidth}}>\n                <textarea onChange={this.handleChange} value={this.state.text} id=\"editor\"></textarea>\n            </div>\n            <div id=\"resizer\" onMouseDown={this.resizerMouseDown}></div>\n            <div id=\"preview-pane\" style={{width:this.state.previewWidth}}>\n                <div id=\"preview\" dangerouslySetInnerHTML={{__html:this.state.markdown}}></div>\n            </div>\n        </div>\n    }\n}\n\nexport default Markdown","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Markdown from '../src/components/react-components/react-main'\nimport '../src/assets/css/style.css'\nimport '../src/assets/css/mobile.css'\nimport TEXT from '../src/assets/js/main'\n\nReactDOM.render(\n  <Markdown initial={TEXT}/>,\n  document.getElementById('render')\n);","var TEXT = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`\n\nexport default TEXT"],"sourceRoot":""}